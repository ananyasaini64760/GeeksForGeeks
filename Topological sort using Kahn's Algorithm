class Solution {
    public static ArrayList<Integer> topoSort(int V, int[][] edges) {
        // code here
        ArrayList<Integer> result = new ArrayList<>();
        ArrayList<ArrayList<Integer>> graph = new ArrayList<>();
        int[] inDegree = new int[V];
        Queue<Integer> queue = new LinkedList<>();
        
        for(int i = 0; i < V; i++){
            graph.add(new ArrayList<>());
        }
        for(int[] edge : edges){
            int u = edge[0];
            int v = edge[1];
            graph.get(u).add(v);
        }
        
        for(int u = 0; u < V; u++){
            for(int v : graph.get(u)){
                inDegree[v]++;
            }
        }
        
        for(int i = 0; i < V; i++){
            if(inDegree[i] == 0){
                queue.add(i);
            }
        }
        while(!queue.isEmpty()){
            int curr = queue.poll();
            result.add(curr);
            for(int neighbour : graph.get(curr)){
                inDegree[neighbour]--;
                if(inDegree[neighbour] == 0){
                    queue.add(neighbour);
                }    
            }
        }
        return result;
    }
}
